{"version":3,"sources":["blocks/Users/Enums/ViewType.ts","blocks/Routing/RouterContext.ts","blocks/Routing/Route.tsx","blocks/Routing/Router.tsx","model/groups.ts","model/userModel.ts","model/userDataProvider.ts","model/userDataBuilder.ts","blocks/Users/Layouts/GroupsLayoutStrategy.tsx","blocks/Users/Layouts/TableLayoutStrategy.tsx","blocks/Users/Layouts/TilesLayoutStrategy.tsx","blocks/Users/Layouts/LayoutContainer.tsx","blocks/Users/LayoutSwitcher/LayoutSwitcher.tsx","blocks/Users/Search/Search.tsx","blocks/Users/Users.tsx","blocks/Welcome/Welcome.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ViewType","RouterContext","React","createContext","RouterProvider","Provider","RouterConsumer","Consumer","Route","_this$props","this","props","showWhenEmpty","path","block","react_default","a","createElement","hash","Component","Router","_this","getHash","window","location","replace","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hashListener","state","setState","value","children","addEventListener","removeEventListener","groups","GroupsDeserializer","CacheKey","deserialize","UserModel","JsonProperty","type","String","name","Number","deserializer","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","id","group","groupId","company","email","phone","singletonEnforcer","Symbol","singleton","UserDataProvider","enforcer","data","Error","url","downloadString","then","result","userData","JSON","parse","filter","item","map","ObjectMapper","onDataReady","catch","error","alert","message","Promise","resolve","reject","request","XMLHttpRequest","open","onload","status","response","concat","statusText","onerror","readyState","send","GroupsLayoutStrategy","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","userModel","userGroups","userGroup","length","push","_iterator","iterator","next","done","err","return","_this2","className","val","renderGroup","key","GroupsLayoutStrategy_Group","valueObject","Group","TableLayoutStrategy","renderLine","TableLayoutStrategy_Line","isUnmanaged","Line","classes","TilesLayoutStrategy","placeholders","placeHolderKeys","Array","fill","_","i","renderTile","TilesLayoutStrategy_Tile","Tile","LayoutContainer","tableLayout","groupsLayout","tilesLayout","instance","viewType","Table","renderLayout","layout","setup","render","LayoutSwitcher","handleGroupClick","handleTileClick","handleTableClick","handleClick","bind","onSwitch","isActive","getButtonClassName","onClick","Search","placeholder","Users","handleSwitch","assertThisInitialized","Users_Search_Search","LayoutSwitcher_LayoutSwitcher_LayoutSwitcher","Layouts_LayoutContainer","clickedType","Welcome","App","requestUsersData","href","Routing_Router","Routing_Route","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.854c6bff.chunk.js","sourcesContent":["enum ViewType { Default= 0, Group= 1, Tile= 2, Table= 3 }\r\n\r\nexport default ViewType;\r\n","import React from \"react\";\r\n\r\nconst RouterContext = React.createContext({});\r\n\r\nexport const RouterProvider: any = RouterContext.Provider;\r\nexport const RouterConsumer: any = RouterContext.Consumer;\r\n","import React, { Component } from 'react';\r\nimport { RouterConsumer } from './RouterContext';\r\n\r\ninterface IRouteProps {\r\n    path: string;\r\n    showWhenEmpty?: boolean;\r\n    block: typeof React.Component;\r\n}\r\n\r\nclass Route extends Component<IRouteProps> {\r\n\r\n    public render(): JSX.Element | null {\r\n\r\n        const { showWhenEmpty, path, block } = this.props;\r\n\r\n        return (\r\n            <RouterConsumer>\r\n                {(hash: string) => (showWhenEmpty && hash === '' || hash === path) ? React.createElement(block) : null} \r\n            </RouterConsumer>);\r\n\r\n    }\r\n}\r\n\r\nexport default Route;\r\n","import React, { Component } from 'react';\r\nimport { RouterProvider } from './RouterContext';\r\n\r\nclass Router extends Component<any, { hash: string }> {\r\n\r\n    private hashListener: EventListener;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            hash: getHash(),\r\n        };\r\n\r\n        this.hashListener = () => {\r\n            this.setState({ hash : getHash() });\r\n        };\r\n\r\n        function getHash() {\r\n            return window.location.hash.replace('#', '');\r\n        }\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return <RouterProvider value={this.state.hash}>{this.props.children}</RouterProvider>;\r\n    }\r\n\r\n    public componentDidMount() {\r\n        window.addEventListener(\"hashchange\", this.hashListener);\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        window.removeEventListener(\"hashchange\", this.hashListener);\r\n    }\r\n}\r\n\r\nexport default Router;\r\n","const groups: string[] = [];\r\ngroups[0] = \"Unmanaged\";\r\ngroups[1] = \"Managers\";\r\ngroups[2] = \"Sales\";\r\ngroups[3] = \"Human resources\";\r\ngroups[4] = \"Financials\";\r\ngroups[5] = \"CEO\";\r\n\r\nexport default groups;\r\n","import { CacheKey, Deserializer, JsonProperty } from \"json-object-mapper\";\r\nimport groups from \"./groups\";\r\n\r\n@CacheKey(\"GroupsDeserializer\")\r\nclass GroupsDeserializer implements Deserializer {\r\n    public deserialize = (value: number): string => {\r\n        return groups[value] || \"\";\r\n    }\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport default class UserModel {\r\n\r\n    @JsonProperty({ type: String, name: \"id\" })\r\n    public id!: string;\r\n\r\n    @JsonProperty({ type: Number, name: \"groupId\", deserializer: GroupsDeserializer })\r\n    public group: string;\r\n\r\n    @JsonProperty({ type: Number, name: \"groupId\" })\r\n    public groupId: number;\r\n\r\n    @JsonProperty({ type: String, name: \"name\" })\r\n    public name: string;\r\n\r\n    @JsonProperty({ type: String, name: \"company\" })\r\n    public company: string;\r\n\r\n    @JsonProperty({ type: String, name: \"email\" })\r\n    public email: string;\r\n\r\n    @JsonProperty({ type: String, name: \"phone\" })\r\n    public phone: string;\r\n\r\n    constructor() {\r\n        this.id = \"\";\r\n        this.group = \"\";\r\n        this.groupId = 0;\r\n        this.name = \"\";\r\n        this.company = \"\";\r\n        this.email = \"\";\r\n        this.phone = \"\";\r\n    }\r\n}\r\n","import buildUserModels from './userDataBuilder';\r\nimport UserModel from './userModel';\r\n\r\nconst singletonEnforcer = Symbol();\r\nconst singleton = Symbol();\r\n\r\nexport default class UserDataProvider {\r\n    private data?: UserModel[];\r\n\r\n    constructor(enforcer: symbol) {\r\n        \r\n        if (enforcer !== singletonEnforcer) {\r\n            throw new Error(\"Data provider manual construction is not allowed\");\r\n        }\r\n    }\r\n\r\n    public static get instance(): UserDataProvider {\r\n\r\n        if (!this[singleton]) {\r\n            this[singleton] = new UserDataProvider(singletonEnforcer);\r\n        }\r\n\r\n        return this[singleton];\r\n    }\r\n\r\n// tslint:disable-next-line: no-empty\r\n    public static set instance(value: UserDataProvider) {}\r\n\r\n    public get userData() {\r\n        return this.data || [];\r\n    }\r\n    \r\n// tslint:disable-next-line: no-empty\r\n    public onDataReady(): void {}\r\n\r\n    public requestUsersData(url: string): void {\r\n\r\n        this.data = void 0;\r\n        \r\n        UserDataProvider.downloadString(url)\r\n                .then((result: string) => {\r\n                    this.data = buildUserModels(result);\r\n                    this.onDataReady();\r\n                })\r\n                .catch((error: Error) => {\r\n                    alert(error.message);\r\n                    this.data = void 0;\r\n                });\r\n    }\r\n\r\n// tslint:disable-next-line: member-ordering\r\n    private static async downloadString(url: string): Promise<string> {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            const request = new XMLHttpRequest();\r\n            request.open('GET', url);\r\n        \r\n            request.onload = function() {\r\n\r\n                if (this.status === 200) {\r\n\r\n                    resolve(this.response);\r\n\r\n                } else {\r\n                   \r\n                    const error = new Error(`Status: ${this.statusText}. Code: ${this.status}`);\r\n                    reject(error);\r\n                }\r\n            };\r\n        \r\n            request.onerror = () => {\r\n                reject(new Error(\"Failed to download string. Ready state was: \" + request.readyState));\r\n            };\r\n        \r\n            request.send();\r\n        });\r\n    }\r\n}\r\n","import {ObjectMapper} from 'json-object-mapper';\r\nimport UserModel from './userModel';\r\n\r\nexport default function buildUserModels(userData: string): UserModel[] {\r\n    const array = JSON.parse(userData);\r\n    const userModels = \r\n                array\r\n                    .filter((item: any) => item.id)\r\n                    .map((item: any) => ObjectMapper.deserialize(UserModel, item));\r\n    \r\n    return userModels;\r\n}\r\n","import React from 'react';\r\nimport UserModel from '../../../model/userModel';\r\nimport \"./Groups.scss\";\r\nimport ILayoutStrategy from './ILayoutStrategy';\r\n\r\ntype UserGroup = [string, UserModel[]];\r\n\r\nexport default class GroupsLayoutStrategy implements ILayoutStrategy {\r\n    \r\n    private groups: UserGroup[] = [];\r\n\r\n    public setup(data: UserModel[]) {\r\n\r\n        for (const userModel of data) {\r\n\r\n            const userGroups = this.groups.filter((group: UserGroup) => group[0] === userModel.group);\r\n\r\n            let userGroup: UserGroup;\r\n            if (userGroups.length === 0) {\r\n                userGroup = [userModel.group, []];\r\n                this.groups.push(userGroup);\r\n            } else {\r\n                userGroup = userGroups[0];\r\n            }\r\n\r\n            userGroup[1].push(userModel);\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n                <ul className=\"user-groups\">\r\n                    {this.groups.map((val: UserGroup) => this.renderGroup(val[0], val))}\r\n                </ul>);\r\n    }\r\n\r\n    private renderGroup(key: string, value: UserGroup): JSX.Element {\r\n        return <Group key={key} valueObject={value}/>;\r\n    }\r\n}\r\n  \r\nconst Group = (props: { valueObject: UserGroup }): JSX.Element => {\r\n    return <li className=\"user-groups__group\">{props.valueObject[0]}</li>;\r\n};\r\n","import React from 'react';\r\nimport UserModel from '../../../model/userModel';\r\nimport ILayoutStrategy from './ILayoutStrategy';\r\nimport \"./Table.scss\";\r\nimport groups from '../../../model/groups';\r\n\r\nexport default class TableLayoutStrategy implements ILayoutStrategy {\r\n    private data: UserModel[] = [];\r\n\r\n    public setup(data: UserModel[]) {\r\n        this.data = data;\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"users-table\">\r\n                {this.data.map((val: UserModel) => this.renderLine(val.id, val))}\r\n            </div>);\r\n    }\r\n\r\n    private renderLine(key: string, value: UserModel): JSX.Element {\r\n        return <Line key={key} valueObject={value} isUnmanaged={value.groupId === 0}/>;\r\n    }\r\n}\r\n\r\nconst Line = (props: { valueObject: UserModel, isUnmanaged: boolean}): JSX.Element => {\r\n\r\n    const classes = \r\n          \"users-table__row \" \r\n           + (props.isUnmanaged ? \"users-table__row_unmanaged\" : \"\");\r\n    const line = (\r\n            <div className={classes}>\r\n                <div className=\"users-table__cell\">{props.valueObject.name}</div>\r\n                <div className=\"users-table__cell\">{props.valueObject.company}</div>\r\n                <div className=\"users-table__cell\">{props.valueObject.email}</div>\r\n                <div className=\"users-table__cell\">{props.valueObject.group}</div>\r\n                <div className=\"users-table__cell\">{props.valueObject.phone}</div>\r\n            </div>);\r\n\r\n    return line;\r\n};\r\n","import React from 'react';\r\nimport UserModel from '../../../model/userModel';\r\nimport ILayoutStrategy from './ILayoutStrategy';\r\nimport \"./Tiles.scss\";\r\n\r\nexport default class TilesLayoutStrategy implements ILayoutStrategy {\r\n    private placeholders: JSX.Element[];\r\n    private data: UserModel[] = [];\r\n\r\n    constructor() {\r\n        // todo: replace whith grid layout when IE supports it\r\n        const placeHolderKeys = new Array(10).fill(0); \r\n        this.placeholders = placeHolderKeys.map((_, i) => {\r\n            return <li key={\"placeholder\" + i} className=\"user-tiles__placeholder\"/>;\r\n        });\r\n    }\r\n\r\n    public setup(data: UserModel[]) {\r\n        this.data = data;\r\n    }\r\n\r\n    public render() {\r\n        \r\n        const data = this.data\r\n            .map((val: UserModel) => this.renderTile(val.id, val))\r\n            .concat(this.placeholders);\r\n\r\n        return <ul className=\"user-tiles\">{data}</ul>;\r\n    }\r\n\r\n    private renderTile(key: string, value: UserModel): JSX.Element {\r\n        return <Tile key={key} valueObject={value}/>;\r\n    }\r\n}\r\n  \r\nconst Tile = (props: { valueObject: UserModel }): JSX.Element => {\r\n    return <li className=\"user-tiles__tile\">{props.valueObject.name}</li>;\r\n};\r\n","import React, { Component } from 'react';\r\nimport UserDataProvider from '../../../model/userDataProvider';\r\nimport UserModel from '../../../model/userModel';\r\nimport ViewType from \"../Enums/ViewType\";\r\nimport ILayoutTypeProps from '../Props/ILayoutTypeProps';\r\nimport GroupsLayoutStrategy from './GroupsLayoutStrategy';\r\nimport ILayoutStrategy from './ILayoutStrategy';\r\nimport TableLayoutStrategy from './TableLayoutStrategy';\r\nimport TilesLayoutStrategy from './TilesLayoutStrategy';\r\n\r\ninterface ILayoutDataState {\r\n    data: UserModel[];\r\n}\r\n\r\nclass LayoutContainer extends Component<ILayoutTypeProps, ILayoutDataState> {\r\n\r\n    private tableLayout: ILayoutStrategy;\r\n    private groupsLayout: ILayoutStrategy;\r\n    private tilesLayout: ILayoutStrategy;\r\n\r\n    constructor(props: ILayoutTypeProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: UserDataProvider.instance.userData\r\n        };\r\n\r\n        UserDataProvider.instance.onDataReady = () => {\r\n            this.setState({\r\n                data: UserDataProvider.instance.userData\r\n            });\r\n        };\r\n\r\n        this.tableLayout = new TableLayoutStrategy();\r\n        this.groupsLayout = new GroupsLayoutStrategy();\r\n        this.tilesLayout = new TilesLayoutStrategy();\r\n    }\r\n    \r\n    public render() {\r\n  \r\n        switch (this.props.viewType) {   \r\n            case ViewType.Table:\r\n                return this.renderLayout(this.tableLayout);\r\n        \r\n            case ViewType.Group:\r\n                return this.renderLayout(this.groupsLayout);\r\n        \r\n            case ViewType.Tile:\r\n            default:\r\n                return this.renderLayout(this.tilesLayout);\r\n        }\r\n    }\r\n\r\n    private renderLayout(layout: ILayoutStrategy): JSX.Element {\r\n        layout.setup(this.state.data);\r\n        return (\r\n            <div className=\"users-container__content-panel\">\r\n                {layout.render()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LayoutContainer;\r\n","import React, { Component } from 'react';\r\nimport ViewType from \"../Enums/ViewType\";\r\nimport ILayoutTypeProps from \"../Props/ILayoutTypeProps\";\r\nimport \"./LayoutSwitcher.scss\";\r\n\r\nexport interface ISwitcherProps extends ILayoutTypeProps {\r\n    onSwitch: (viewType: ViewType) => void;\r\n}\r\n  \r\nexport default class LayoutSwitcher extends Component<ISwitcherProps> {\r\n\r\n    private static getButtonClassName(type: string, isActive: boolean): string {\r\n        return `switcher__button switcher__button_type_${type} ${isActive ? \"switcher__button_active\" : \"\"}`;\r\n    }\r\n\r\n    private static handleClick(onSwitch: (viewType: ViewType) => void, viewType: ViewType) {\r\n        onSwitch(viewType);\r\n    }\r\n\r\n    private handleGroupClick: () => void;\r\n    private handleTileClick: () => void;\r\n    private handleTableClick: () => void;\r\n\r\n    constructor(props: ISwitcherProps) {\r\n        super(props);\r\n\r\n        this.handleGroupClick = LayoutSwitcher.handleClick.bind(null, this.props.onSwitch, ViewType.Group);\r\n        this.handleTileClick = LayoutSwitcher.handleClick.bind(null, this.props.onSwitch, ViewType.Tile);\r\n        this.handleTableClick = LayoutSwitcher.handleClick.bind(null, this.props.onSwitch, ViewType.Table);\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n        <div className=\"switcher\">\r\n            <div \r\n                className={LayoutSwitcher.getButtonClassName(\"group\", this.props.viewType === ViewType.Group)} \r\n                onClick={this.handleGroupClick}\r\n            />\r\n            <div \r\n                className={LayoutSwitcher.getButtonClassName(\"tile\", this.props.viewType === ViewType.Tile)} \r\n                onClick={this.handleTileClick}\r\n            />\r\n            <div \r\n                className={LayoutSwitcher.getButtonClassName(\"table\", this.props.viewType === ViewType.Table)} \r\n                onClick={this.handleTableClick}\r\n            />\r\n        </div>);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./Search.scss\";\r\n\r\nconst Search = (): JSX.Element => {\r\n    return (\r\n        <div className=\"search\">\r\n          <label className=\"search__label\">Search:</label>\r\n          <input className=\"search__input\" type=\"search\" placeholder=\"text\" />\r\n        </div>);\r\n  };\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\r\nimport ViewType from \"./Enums/ViewType\";\r\nimport LayoutContainer from \"./Layouts/LayoutContainer\";\r\nimport LayoutSwitcher from \"./LayoutSwitcher/LayoutSwitcher\";\r\nimport ILayoutTypeProps from \"./Props/ILayoutTypeProps\";\r\nimport Search from './Search/Search';\r\nimport './Users.scss';\r\n\r\ninterface ILayoutTypeState {\r\n  viewType: ViewType;\r\n}\r\n\r\nclass Users extends Component<ILayoutTypeProps, ILayoutTypeState> {\r\n  constructor(props: ILayoutTypeProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      viewType: ViewType.Tile\r\n    };\r\n\r\n    this.handleSwitch = this.handleSwitch.bind(this);\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div className=\"users-container\">\r\n        <div className=\"users-container__header-panel\">\r\n          <Search/>\r\n          <LayoutSwitcher viewType={this.state.viewType} onSwitch={this.handleSwitch}/>\r\n        </div>\r\n        <LayoutContainer viewType={this.state.viewType}/>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private handleSwitch(clickedType: ViewType): void {\r\n    this.setState({\r\n      viewType: clickedType\r\n    });\r\n  }\r\n}\r\n\r\nexport default Users;\r\n","import React, { Component } from 'react';\r\n\r\ninterface IWelcomeProps {}\r\n\r\nclass Welcome extends Component<IWelcomeProps> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div>Welcome</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Welcome;\r\n","import React, { Component } from 'react';\r\nimport \"reflect-metadata\";\r\nimport './App.scss';\r\nimport Route from './blocks/Routing/Route';\r\nimport Router from './blocks/Routing/Router';\r\nimport Users from './blocks/Users/Users';\r\nimport Welcome from './blocks/Welcome/Welcome';\r\nimport UserDataProvider from './model/userDataProvider';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    UserDataProvider.instance.requestUsersData(\"https://api.myjson.com/bins/z1hb8\");\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div className=\"app\">\r\n        <header className=\"app__header\">\r\n          <div className=\"app__link-container\">\r\n            <a className=\"app__link\" href=\"#welcome\">Welcome</a>\r\n            <a className=\"app__link\" href=\"#users\">Users</a>\r\n          </div>\r\n        </header>\r\n        <Router>\r\n          <Route path=\"welcome\" showWhenEmpty={true} block={Welcome}/>\r\n          <Route path=\"users\" block={Users}/>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'core-js/es6/symbol';\nimport 'core-js/es6/object';\nimport 'core-js/es6/function';\nimport 'core-js/es6/parse-int';\nimport 'core-js/es6/parse-float';\nimport 'core-js/es6/number';\nimport 'core-js/es6/math';\nimport 'core-js/es6/string';\nimport 'core-js/es6/date';\nimport 'core-js/es6/array';\nimport 'core-js/es6/regexp';\nimport 'core-js/es6/map';\nimport 'core-js/es6/weak-map';\nimport 'core-js/es6/set';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}